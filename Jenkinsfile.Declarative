pipeline {
  agent {
    kubernetes {
      cloud 'k8s'
      idleMinutes '1'
      yamlFile 'pods/KubernetesPod.yaml'
      label 'web-app-devops'
    }
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'checkout repositorio github'
        checkout([$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/robarros/web-app-devops.git']]])
        scmSkip(deleteBuild: true, skipPattern:'.*\\[ci skip\\].*')
        script {
          TAG_IMAGE = sh(returnStdout: true, script: 'git tag --sort=-creatordate | head -n 1').trim()
        }
        echo "ola minha $TAG_IMAGE"
        sh 'hostname'
      }
    }

    stage('Config') {
      steps {
        echo 'rodando container'
        container('alpine') {
          sh 'printenv'
          sh 'ls -lha'
          echo "a tag da minha image $TAG_IMAGE"
          echo "a branch atual Ã© $BRANCH_NAME"
          sh "echo $TAG_IMAGE > tag.txt"
        }
      }
    }

    stage('Create Git Tag') {
      when {
        branch 'master'
      }
      steps {
        container('node-12') {
          sh 'npm ci'
          sh 'npx semantic-release'
        }
      }
    }

    stage('Deploy to Dev') {
      agent { label 'local' }
      when {
        branch 'dev'
      }
      steps {
        sh "hostname"
        sh "ls -lha"
        sh "cat tag.txt"}      
    }

    stage('Deploy to Prod') {
      when {
        branch 'master'
      }
      steps {
        withKubeCredentials(kubectlCredentials: [[credentialsId: 'k8s-config']]) {
          container('k8s-kubectl') {
            sh 'kubectl config use-context kubernetes-admin@cluster.local'
            sh 'kubectl get nodes'
                }}
        }
      }
    }
    }
